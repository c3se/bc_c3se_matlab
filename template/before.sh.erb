#This script (`before.sh.erb`) is sourced directly into the main Bash script
# that is run when the batch job starts up. It is called before the `script.sh`
# is forked off into a separate process.
#
# There are some helpful Bash functions that are made available to this script
# that encapsulate commonly used routines when initializing a web server:
#
#   - find_port
#       Find available port in range [$1..$2]
#       Default: 2000 65535
#
#   - create_passwd
#       Generate random alphanumeric password with $1 characters
#       Default: 32
#
# We **MUST** supply the following environment variables in this
# `before.sh.erb` script so that a user can connect back to the web server when
# it is running (case-sensitive variable names):
#
#   - $host (already defined earlier, so no need to define again)
#       The host that the web server is listening on
#
#   - $port
#       The port that the web server is listening on
#
#   - $password
#       The plain text password used to authenticate to the web server with

# Find available port to run server on
port=$(find_port)

# Generate SHA1 encrypted password
password="$(create_passwd 16)"

# Get grafana link
job_stats_link=$(job_stats.py $SLURM_JOB_ID)

# Working directory
<%
# Set our working directory.
working_dir = Pathname.new(context.working_dir)

# Ensure that code-server always starts up in either a user defined directory or the home directory.
if ! working_dir.exist?
    working_dir = Pathname.new(ENV['HOME'])
elsif working_dir.file?
    working_dir = working_dir.parent
end
%>

cd "<%= working_dir.to_s %>"
export MWI_APP_PORT=$port
export MWI_BASE_URL="/node/${host}/${port}/"
export MWI_ENABLE_TOKEN_AUTH="True"
export MWI_AUTH_TOKEN="${password}"
#export MLM_LICENSE_FILE="optional_license_file_by_default"
#export MWI_LOG_FILE="todo"
#export MWI_SSL_CERT_FILE="todo"
#export MWI_SSL_KEY_FILE="todo"
#export MWI_APP_HOST="0.0.0.0"

